import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from collections import Counter
import re
from nltk.corpus import stopwords

def cargar_stopwords_espanol():
    try:
        return set(stopwords.words('spanish'))
    except LookupError:
        import nltk
        nltk.download('stopwords')
        return set(stopwords.words('spanish'))

def configurar_estilo_visual():
    plt.style.use('seaborn-v0_8-darkgrid')
    sns.set(rc={'figure.figsize': (12, 6)})

def cargar_datos_limpios(path_archivo: str = "mundial_tweets.csv") -> pd.DataFrame:
    datos = pd.read_csv(path_archivo)
    datos["Date"] = pd.to_datetime(datos["Date"], errors="coerce")
    datos["Fecha"] = datos["Date"].dt.date
    datos["Hora"] = datos["Date"].dt.time
    return datos.drop(columns=["Date"])

def extraer_palabras_frecuentes(textos: pd.Series, stopwords_es: set, longitud_minima: int = 4, top: int = 20) -> pd.DataFrame:
    texto_completo = ' '.join(textos.dropna()).lower()
    palabras = re.findall(r'\b\w+\b', texto_completo)
    palabras_filtradas = [palabra for palabra in palabras if palabra not in stopwords_es and len(palabra) >= longitud_minima]
    frecuencia_palabras = Counter(palabras_filtradas).most_common(top)
    resultado = pd.DataFrame(frecuencia_palabras, columns=["Palabra", "Frecuencia"])
    resultado["Porcentaje"] = resultado["Frecuencia"] / resultado["Frecuencia"].sum() * 100
    return resultado

def mostrar_grafico_palabras(df_frecuencias: pd.DataFrame):
    ax = df_frecuencias.plot(kind="barh", x="Palabra", y="Frecuencia", legend=False, color="skyblue")
    for indice, (frecuencia, porcentaje) in enumerate(zip(df_frecuencias["Frecuencia"], df_frecuencias["Porcentaje"])):
        plt.text(frecuencia + 1, indice, f'{frecuencia} ({porcentaje:.1f}%)', va='center')
    plt.title("Palabras más comunes en tweets")
    plt.xlabel("Frecuencia")
    plt.gca().invert_yaxis()
    plt.tight_layout()
    plt.show()

def imprimir_resumen(df_frecuencias: pd.DataFrame):
    print("\nPalabras más utilizadas en los tweets:")
    print(df_frecuencias)

if __name__ == "__main__":
    configurar_estilo_visual()
    stopwords_es = cargar_stopwords_espanol()
    tweets_df = cargar_datos_limpios()
    resumen_palabras = extraer_palabras_frecuentes(tweets_df["Tweet"], stopwords_es)
    mostrar_grafico_palabras(resumen_palabras)
    imprimir_resumen(resumen_palabras)
